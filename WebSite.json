{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "hostingPlanName": {
      "type": "string",
      "minLength": 1
    },
    "skuName": {
      "type": "string",
      "defaultValue": "B1",
      "allowedValues": [
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],

      "metadata": {
        "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "databaseAccountName": {
      "type": "string"
    },
    "webSiteName": {
      "type": "string"
    },

    "CRMResourceUrl": {
      "type": "string"
    },
    "CRMUserName": {
      "type": "string"
    },

    "CRMPassword": {
      "type": "securestring"
    },


    "ObjectId": {
      "type": "string"
    },


    "AADClientAppId": {
      "type": "string"
    },


    "AADClientsecretKey": {
      "type": "securestring"
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes plan's instance count"
      }
    },
    "storageaccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    }
  },
  "variables": {
    "webSiteName": "[concat('ws', uniqueString(resourceGroup().id))]",
    "storageaccountName": "[concat('stracc', uniqueString(resourceGroup().id))]",
    "KeyVaultName": "[concat('ArVault', uniqueString(resourceGroup().id),'a')]"
  },
  "resources": [
    {
      "apiVersion": "2015-04-08",
      "location": "[resourceGroup().location]",
      "name": "[parameters('databaseAccountName')]",
      "properties": {
        "name": "[parameters('databaseAccountName')]",
        "databaseAccountOfferType": "Standard"
      },
      "type": "Microsoft.DocumentDB/databaseAccounts"
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[parameters('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "HostingPlan"
      },
      "sku": {
        "name": "[parameters('skuName')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "properties": {
        "name": "[parameters('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('webSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
        "displayName": "Website"
      },
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
        "[concat('Microsoft.DocumentDB/databaseAccounts/', parameters('databaseAccountName'))]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageaccountName'))]"
      ],
      "properties": {
        "name": "[variables('webSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
        "siteConfig": {
          "phpVersion": "off",
          "alwaysOn": true,

          "connectionStrings": [
            {
              "ConnectionString": "[Concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageaccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageaccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
              "Name": "AzureWebJobsDashboard",
              "Type": 3
            },
            {
              "ConnectionString": "[Concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageaccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageaccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
              "Name": "AzureWebJobsStorage",
              "Type": 3
            }
          ],
          "appSettings": [
            {
              "Name": "DocumentDB.EndpointUrl",
              "Value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint]"
            },
            {
              "Name": "DocumentDB.PrimaryKey",
              "Value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('databaseAccountName')), '2015-04-08').primaryMasterKey]"
            },
            {
              "Value": "[Concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageaccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageaccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
              "Name": "AzureWebJobsDashboard"
            },
            {
              "Value": "[Concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageaccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageaccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
              "Name": "AzureWebJobsStorage"
            },
            {
              "Value": "[parameters('AADClientAppId')]",
              "Name": "keyvaultclientId"
            },
            {
              "Value": "[parameters('AADClientsecretKey')]",
              "Name": "keyvaultclientsecretId"
            },
            {
              "Value": "[concat('https://',variables('KeyVaultName'), '.vault.azure.net/')]",
              "Name": "keyvaulturl"
            },
            {
              "Value": "[parameters('CRMResourceUrl')]",
              "Name": "CRM.ResourceUrl"
            },
            {
              "Value": "[parameters('AADClientAppId')]",
              "Name": "CRM.ClientId"
            },
            {
              "Value": "[variables('storageaccountName')]",
              "Name": "CloudStorage.AccountName"
            },
            {
              "Value": "archivedev",
              "Name": "CloudStorage.ContainerName"
            },
            {
              "Value": "?sv=2017-04-17&amp;ss=b&amp;srt=sco&amp;sp=r&amp;se=2017-10-18T00:47:55Z&amp;st=2017-10-16T16:47: 55Z&amp;spr=https&amp;sig=p6zPRWNY6G7UrZOce7w%2Bwg%2BXCunAc%2BfCt2DZqC90G0c%3D",
              "Name": "CloudStorage.SASToken"
            },
            {
              "Value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageaccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
              "Name": "CloudStorage.AccountKey"
            },
            {
              "Value": "25",
              "Name": "ThreadCount"
            },
            {
              "Value": "25",
              "Name": "SleepBetweenRuns"
            },
            {
              "Value": "false",
              "Name": "LogVerbose"
            }
          ]
        }
      },
      "resources": [


        {
          "apiVersion": "2015-08-01",
          "type": "config",
          "name": "web",
          "dependsOn": [
            "[concat('Microsoft.Web/Sites/', variables('webSiteName'))]",
            "[concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))]"
          ],
          "properties": {
            "connectionStrings": [
              {
                "ConnectionString": "[concat(reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint, '@', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('databaseAccountName')), '2015-04-08').primaryMasterKey)]",
                "Name": "DocDBConnection",
                "Type": 3
              }
            ],
            "appSettings": [
              {
                "Value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint]",
                "Name": "endpoint"
              },
              {
                "Value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName')), '2015-04-08').primaryMasterKey]",
                "Name": "authKey"
              }
            ]
          }
        },


        {
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('webSiteName'))]"
          ],
          "location": "[resourceGroup().location]",
          "name": "MSDeploy",
          "properties": {
            "alwaysOn": true,
            "connectionStrings": [
              {
                "ConnectionString": "[concat(reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint, '@', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('databaseAccountName')), '2015-04-08').primaryMasterKey)]",
                "Name": "DocDBConnection",
                "Type": 3
              }
            ],
            "appSettings": [
              {
                "Value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint]",
                "Name": "endpoint"
              },
              {
                "Value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('databaseAccountName')), '2015-04-08').primaryMasterKey]",
                "Name": "authKey"
              }
            ],
            "dbType": "None",
            "debugSetting": {
              "detailLevel": "requestContent, responseContent"
            },
            "packageUri": "https://github.com/JitendraMishra2010/CRMArchival/raw/master/Microsoft.Dynamics.Archival.ArchiveApp.zip"
          },
          "tags": {
            "displayName": "WebDeployforWebApp"
          },
          "type": "extensions"
        }
      ]
    },
    {
      "name": "[variables('storageaccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [ ],
      "tags": {
        "displayName": "storageaccount"
      },
      "properties": {
        "accountType": "[parameters('storageaccountType')]"
      }
    },



    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('KeyVaultName')]",
      "apiVersion": "2015-06-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "KeyVault"
      },
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[parameters('ObjectId')]",
            "permissions": {
              "keys": [
                "all"
              ],
              "secrets": [
                "all"
              ]

            }
          }

        ],
        "enabledForTemplateDeployment": true,
        "sku": {
          "name": "Standard",
          "family": "A"
        }

      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','CRMUser')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('CRMUserName')]"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"

      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','CRMPassword')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('CRMPassword')]"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"
      ]
    },

    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','DocumentDBEndpointUrl')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint]"
      },
      "dependsOn": [
        "[concat('Microsoft.DocumentDB/databaseAccounts/', parameters('databaseAccountName'))]",
        "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"

      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','DocumentDBPrimaryKey')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('databaseAccountName')), '2015-04-08').primaryMasterKey]"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]",
        "[concat('Microsoft.DocumentDB/databaseAccounts/', parameters('databaseAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','CloudStorageAccountName')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[variables('storageaccountName')]"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','CloudStorageAccountKey')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageaccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','LogVerbose')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "False"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','CRMResourceUrl')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('CRMResourceUrl')]"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','CRMClientId')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('AADClientAppId')]"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','CRMClientSecret')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('AADClientsecretKey')]"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"
      ]
    }
  ]
}

