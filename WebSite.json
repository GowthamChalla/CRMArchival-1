{    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",    "contentVersion": "1.0.0.0",    "parameters": {        "hostingPlanName": {            "minLength": 1,            "type": "String"        },        "skuName": {            "defaultValue": "B1",            "allowedValues": [                "B1",                "B2",                "B3",                "S1",                "S2",                "S3",                "P1",                "P2",                "P3",                "P4"            ],            "type": "String",            "metadata": {                "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"            }        },        "databaseAccountName": {            "type": "String"        },        "storageAccountName": {            "type": "String"        },        "keyValultName": {            "type": "String"        },        "webSiteName": {            "type": "String"        },        "CRMResourceUrl": {            "type": "String"        },        "CRMUsername": {            "type": "String"        },        "ThreadCount": {            "type": "String"        },        "CRMPassword": {            "type": "SecureString"        },        "CRMWebAPIVersion": {            "defaultValue": "8.1",            "allowedValues": [                "8.1",                "8.2"            ],            "type": "String",            "metadata": {                "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"            }        },        "ObjectId": {            "type": "String"        },        "AADClientAppId": {            "type": "String"        },        "AADClientsecretKey": {            "type": "SecureString"        },        "skuCapacity": {            "defaultValue": 1,            "minValue": 1,            "type": "Int",            "metadata": {                "description": "Describes plan's instance count"            }        },        "storageaccountType": {            "defaultValue": "Standard_LRS",            "allowedValues": [                "Standard_LRS",                "Standard_ZRS",                "Standard_GRS",                "Standard_RAGRS",                "Premium_LRS"            ],            "type": "String"        }    },    "variables": {        "webSiteName": "[parameters('webSiteName')]",        "storageaccountName": "[parameters('storageAccountName')]",        "KeyVaultName": "[parameters('keyValultName')]"    },    "resources": [        {            "type": "Microsoft.DocumentDB/databaseAccounts",            "name": "[parameters('databaseAccountName')]",            "apiVersion": "2015-04-08",            "location": "[resourceGroup().location]",            "properties": {                "name": "[parameters('databaseAccountName')]",                "databaseAccountOfferType": "Standard"            }        },        {            "type": "Microsoft.Web/serverfarms",            "sku": {                "name": "[parameters('skuName')]",                "capacity": "[parameters('skuCapacity')]"            },            "name": "[parameters('hostingPlanName')]",            "apiVersion": "2015-08-01",            "location": "[resourceGroup().location]",            "tags": {                "displayName": "HostingPlan"            },            "properties": {                "name": "[parameters('hostingPlanName')]"            }        },        {            "type": "Microsoft.Web/sites",            "name": "[parameters('webSiteName')]",            "apiVersion": "2015-08-01",            "location": "[resourceGroup().location]",            "tags": {                "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",                "displayName": "Website"            },            "properties": {                "name": "[variables('webSiteName')]",                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",                "siteConfig": {                    "phpVersion": "off",                    "alwaysOn": true,                    "connectionStrings": [                        {                            "ConnectionString": "[Concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageaccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageaccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",                            "Name": "AzureWebJobsDashboard",                            "Type": 3                        },                        {                            "ConnectionString": "[Concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageaccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageaccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",                            "Name": "AzureWebJobsStorage",                            "Type": 3                        }                    ],                    "appSettings": [                        {                            "Name": "DocumentDB.EndpointUrl",                            "Value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint]"                        },                        {                            "Name": "DocumentDB.PrimaryKey",                            "Value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('databaseAccountName')), '2015-04-08').primaryMasterKey]"                        },                        {                            "Value": "[Concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageaccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageaccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",                            "Name": "AzureWebJobsDashboard"                        },                        {                            "Value": "[Concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageaccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageaccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",                            "Name": "AzureWebJobsStorage"                        },                        {                            "Value": "[parameters('AADClientAppId')]",                            "Name": "keyvaultclientId"                        },                        {                            "Value": "[parameters('AADClientsecretKey')]",                            "Name": "keyvaultclientsecretId"                        },                        {                            "Value": "[concat('https://',variables('KeyVaultName'), '.vault.azure.net/')]",                            "Name": "keyvaulturl"                        },                        {                            "Value": "[parameters('CRMResourceUrl')]",                            "Name": "CRM.ResourceUrl"                        },                        {                            "Value": "[parameters('AADClientAppId')]",                            "Name": "CRM.ClientId"                        },                        {                            "Value": "[variables('storageaccountName')]",                            "Name": "CloudStorage.AccountName"                        },                        {                            "Value": "archivedev",                            "Name": "CloudStorage.ContainerName"                        },                        {                            "Value": "?sv=2017-04-17&amp;ss=b&amp;srt=sco&amp;sp=r&amp;se=2017-10-18T00:47:55Z&amp;st=2017-10-16T16:47: 55Z&amp;spr=https&amp;sig=p6zPRWNY6G7UrZOce7w%2Bwg%2BXCunAc%2BfCt2DZqC90G0c%3D",                            "Name": "CloudStorage.SASToken"                        },                        {                            "Value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageaccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",                            "Name": "CloudStorage.AccountKey"                        },                        {                            "Value": "25",                            "Name": "ThreadCount"                        },                        {                            "Value": "25",                            "Name": "SleepBetweenRuns"                        },                        {                            "Value": "false",                            "Name": "LogVerbose"                        }                    ]                }            },            "resources": [                {                    "type": "config",                    "name": "web",                    "apiVersion": "2015-08-01",                    "properties": {                        "connectionStrings": [                            {                                "ConnectionString": "[concat(reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint, '@', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('databaseAccountName')), '2015-04-08').primaryMasterKey)]",                                "Name": "DocDBConnection",                                "Type": 3                            }                        ],                        "appSettings": [                            {                                "Value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint]",                                "Name": "endpoint"                            },                            {                                "Value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName')), '2015-04-08').primaryMasterKey]",                                "Name": "authKey"                            }                        ]                    },                    "dependsOn": [                        "[concat('Microsoft.Web/Sites/', variables('webSiteName'))]",                        "[concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))]"                    ]                },                {                    "type": "extensions",                    "name": "MSDeploy",                    "apiVersion": "2015-08-01",                    "location": "[resourceGroup().location]",                    "tags": {                        "displayName": "WebDeployforWebApp"                    },                    "properties": {                        "alwaysOn": true,                        "connectionStrings": [                            {                                "ConnectionString": "[concat(reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint, '@', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('databaseAccountName')), '2015-04-08').primaryMasterKey)]",                                "Name": "DocDBConnection",                                "Type": 3                            }                        ],                        "appSettings": [                            {                                "Value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint]",                                "Name": "endpoint"                            },                            {                                "Value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('databaseAccountName')), '2015-04-08').primaryMasterKey]",                                "Name": "authKey"                            }                        ],                        "dbType": "None",                        "debugSetting": {                            "detailLevel": "requestContent, responseContent"                        },                        "packageUri": "https://github.com/JitendraMishra2010/CRMArchival/raw/master/Microsoft.Dynamics.Archival.WebappForWebJobs.zip"                    },                    "dependsOn": [                        "[concat('Microsoft.Web/sites/', variables('webSiteName'))]"                    ]                }            ],            "dependsOn": [                "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",                "[concat('Microsoft.DocumentDB/databaseAccounts/', parameters('databaseAccountName'))]",                "[concat('Microsoft.Storage/storageAccounts/',variables('storageaccountName'))]"            ]        },        {            "type": "Microsoft.Storage/storageAccounts",            "name": "[variables('storageaccountName')]",            "apiVersion": "2015-06-15",            "location": "[resourceGroup().location]",            "tags": {                "displayName": "storageaccount"            },            "properties": {                "accountType": "[parameters('storageaccountType')]"            },            "dependsOn": []        },        {            "type": "Microsoft.KeyVault/vaults",            "name": "[variables('KeyVaultName')]",            "apiVersion": "2015-06-01",            "location": "[resourceGroup().location]",            "tags": {                "displayName": "KeyVault"            },            "properties": {                "tenantId": "[subscription().tenantId]",                "accessPolicies": [                    {                        "tenantId": "[subscription().tenantId]",                        "objectId": "[parameters('ObjectId')]",                        "permissions": {                            "keys": [                                "all"                            ],                            "secrets": [                                "all"                            ]                        }                    }                ],                "enabledForTemplateDeployment": true,                "sku": {                    "name": "Standard",                    "family": "A"                }            }        },        {            "type": "Microsoft.KeyVault/vaults/secrets",            "name": "[concat(variables('KeyVaultName'), '/','CRMUsername')]",            "apiVersion": "2015-06-01",            "properties": {                "contentType": "text/plain",                "value": "[parameters('CRMUsername')]"            },            "dependsOn": [                "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"            ]        },        {            "type": "Microsoft.KeyVault/vaults/secrets",            "name": "[concat(variables('KeyVaultName'), '/','CRMPassword')]",            "apiVersion": "2015-06-01",            "properties": {                "contentType": "text/plain",                "value": "[parameters('CRMPassword')]"            },            "dependsOn": [                "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"            ]        },        {            "type": "Microsoft.KeyVault/vaults/secrets",            "name": "[concat(variables('KeyVaultName'), '/','DocumentDBEndpointUrl')]",            "apiVersion": "2015-06-01",            "properties": {                "contentType": "text/plain",                "value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint]"            },            "dependsOn": [                "[concat('Microsoft.DocumentDB/databaseAccounts/', parameters('databaseAccountName'))]",                "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"            ]        },        {            "type": "Microsoft.KeyVault/vaults/secrets",            "name": "[concat(variables('KeyVaultName'), '/','DocumentDBPrimaryKey')]",            "apiVersion": "2015-06-01",            "properties": {                "contentType": "text/plain",                "value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('databaseAccountName')), '2015-04-08').primaryMasterKey]"            },            "dependsOn": [                "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]",                "[concat('Microsoft.DocumentDB/databaseAccounts/', parameters('databaseAccountName'))]"            ]        },        {            "type": "Microsoft.KeyVault/vaults/secrets",            "name": "[concat(variables('KeyVaultName'), '/','CloudStorageAccountName')]",            "apiVersion": "2015-06-01",            "properties": {                "contentType": "text/plain",                "value": "[variables('storageaccountName')]"            },            "dependsOn": [                "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"            ]        },        {            "type": "Microsoft.KeyVault/vaults/secrets",            "name": "[concat(variables('KeyVaultName'), '/','CloudStorageAccountKey')]",            "apiVersion": "2015-06-01",            "properties": {                "contentType": "text/plain",                "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageaccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"            },            "dependsOn": [                "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"            ]        },        {            "type": "Microsoft.KeyVault/vaults/secrets",            "name": "[concat(variables('KeyVaultName'), '/','LogVerbose')]",            "apiVersion": "2015-06-01",            "properties": {                "contentType": "text/plain",                "value": "False"            },            "dependsOn": [                "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"            ]        },        {            "type": "Microsoft.KeyVault/vaults/secrets",            "name": "[concat(variables('KeyVaultName'), '/','CRMResourceUrl')]",            "apiVersion": "2015-06-01",            "properties": {                "contentType": "text/plain",                "value": "[parameters('CRMResourceUrl')]"            },            "dependsOn": [                "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"            ]        },        {            "type": "Microsoft.KeyVault/vaults/secrets",            "name": "[concat(variables('KeyVaultName'), '/','CRMClientId')]",            "apiVersion": "2015-06-01",            "properties": {                "contentType": "text/plain",                "value": "[parameters('AADClientAppId')]"            },            "dependsOn": [                "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"            ]        },        {            "type": "Microsoft.KeyVault/vaults/secrets",            "name": "[concat(variables('KeyVaultName'), '/','ThreadCount')]",            "apiVersion": "2015-06-01",            "properties": {                "contentType": "text/plain",                "value": "[parameters('ThreadCount')]"            },            "dependsOn": [                "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"            ]        },                {            "type": "Microsoft.KeyVault/vaults/secrets",            "name": "[concat(variables('KeyVaultName'), '/','CRMWebAPIVersion')]",            "apiVersion": "2015-06-01",            "properties": {                "contentType": "text/plain",                "value": "[parameters('CRMWebAPIVersion')]"            },            "dependsOn": [                "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"            ]        }    ]}
